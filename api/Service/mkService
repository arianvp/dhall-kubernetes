-- Prelude
   let Prelude = https://raw.githubusercontent.com/dhall-lang/Prelude/v2.0.0/package.dhall
in let Some = Prelude.`Optional`.Some
in let kv   = Prelude.JSON.keyText

-- Kubernetes types and defaults
in let Types   = ./RawTypes
in let default = ./RawDefaults

-- Types for dynamic records
in let KV     = { mapKey : Text, mapValue : Text }
in let ListKV = List KV


in let mkService : ./Service → Types.Service =

  λ(service : ./Service) →

     let selector = Some ListKV [kv "app" service.name]

  in let meta = default.meta
  { name = service.name } //
  { labels = selector
  , annotations = Some ListKV service.annotations
  }

  -- Handlers for the ServiceType union
  in let handlers =
    { ClusterIP    = \(_ : {}) -> "ClusterIP"
    , NodePort     = \(_ : {}) -> "NodePort"
    , LoadBalancer = \(_ : {}) -> "LoadBalancer"
    , ExternalName = \(_ : {}) -> "ExternalName"
    }

  in let spec = default.spec //
  { type = Some Text (merge handlers service.type : Text)
  , ports = Some (List Types.Port)
    [ default.port
      { port = service.outPort } //
      { targetPort = Some Types.IntOrString (default.Int service.containerPort) }
    ]
  , selector = selector
  }

  in default.service
  { metadata = meta
  } //
  { spec = Some Types.Spec spec
  } : Types.Service

in mkService
